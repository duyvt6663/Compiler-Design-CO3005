Program([
	VarDecl(k, ArrayType([2046976359], BooleanType))
	VarDecl(N, ArrayType([2046976359], BooleanType))
	VarDecl(P_, ArrayType([24, 0, 0], FloatType), BinExpr(==, BinExpr(-, BinExpr(+, BinExpr(+, UnExpr(!, Id(D)), Id(J)), Id(Qri)), Id(nj)), BinExpr(+, BinExpr(+, UnExpr(!, UnExpr(-, Id(h))), UnExpr(!, Id(E))), Id(k))))
	FuncDecl(C, VoidType, [InheritOutParam(W8g, AutoType)], S, BlockStmt([]))
	VarDecl(cs, BooleanType, BinExpr(::, BinExpr(-, UnExpr(!, UnExpr(!, Id(xc))), Id(eCub)), BinExpr(+, BinExpr(%, UnExpr(!, Id(c)), Id(R)), BooleanLit(False))))
	VarDecl(i, BooleanType, BinExpr(::, BinExpr(||, BinExpr(*, UnExpr(-, Id(xVF)), Id(hM2A)), UnExpr(-, Id(W))), BinExpr(&&, BinExpr(||, BinExpr(&&, BinExpr(*, BinExpr(*, Id(H1R), Id(c)), UnExpr(-, Id(Q))), UnExpr(!, Id(F))), Id(E4)), Id(i))))
	VarDecl(R, BooleanType, FuncCall(G, []))
	VarDecl(W, BooleanType, BinExpr(||, BinExpr(+, UnExpr(!, Id(Or)), BinExpr(*, BinExpr(/, Id(Jj), FuncCall(bG0, [])), Id(b))), Id(_)))
	VarDecl(hd, BooleanType, BinExpr(&&, BinExpr(||, Id(o), BinExpr(-, Id(FZR), Id(w))), BinExpr(/, Id(e), UnExpr(!, UnExpr(!, Id(C))))))
	VarDecl(T, BooleanType, BinExpr(::, BinExpr(/, BinExpr(%, FuncCall(V, []), UnExpr(!, Id(wP))), UnExpr(-, Id(nF))), BinExpr(>, FuncCall(L, []), UnExpr(!, Id(V8H)))))
	VarDecl(d, BooleanType, BinExpr(*, UnExpr(-, Id(B_)), Id(t)))
	VarDecl(vQ, BooleanType, BinExpr(::, BinExpr(-, BinExpr(%, Id(C), UnExpr(!, Id(I))), UnExpr(!, Id(_))), BinExpr(>, BinExpr(-, BinExpr(+, UnExpr(!, Id(X)), BinExpr(%, Id(vAOmY6Q), Id(Nq))), Id(dP)), BinExpr(&&, BinExpr(&&, UnExpr(!, Id(Ge)), BinExpr(+, BinExpr(-, BinExpr(-, Id(X), Id(y)), Id(Dwcjr4)), Id(w))), Id(Nb)))))
	VarDecl(BI, BooleanType, BinExpr(/, UnExpr(-, StringLit()), UnExpr(-, Id(Sc))))
	VarDecl(O, BooleanType, BinExpr(&&, UnExpr(!, Id(bL)), BinExpr(+, Id(F), UnExpr(!, UnExpr(!, Id(bI))))))
])